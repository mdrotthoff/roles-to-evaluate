    - name: create user(s)
      user:
        name: "{{ item }}"
        comment: "{{ user_management_users[item].real_name }}"
        shell: /bin/bash
      with_items: user_management_active_users

    - name: setup authorized key(s)
      authorized_key:
        user: "{{ item }}"
        key: "{{ lookup('file', user_management_ssh_keys_path ~ user_management_users[item].public_key ) }}"
      with_items: user_management_active_users
      when: user_management_users[item].public_key is defined

    - name: setup additional authorized key(s)
      authorized_key:
        user: "{{ item }}"
        key: "{{ lookup('file', user_management_ssh_keys_path ~ user_management_users[item].additional_public_key ) }}"
      with_items: user_management_active_users
      when: user_management_users[item].additional_public_key is defined

    - name: Create groups
      group:
        name: "{{ item }}"
        state: present
      with_items:
          user_management_server_groups

    - name: setup additional groups for users
      user:
        name: "{{ item.name }}"
        groups: "{{ item.groups }}"
        append: yes
      with_items: user_groups
      when: user_groups is defined

    - name: remove old authorized_key(s) from active users
      authorized_key:
        user: "{{ item }}"
        key: "{{ lookup('file', user_management_ssh_keys_path ~ user_management_users[item].old_public_key ) }}"
        state: absent
      with_items: user_management_active_users
      when: user_management_users[item].old_public_key is defined
